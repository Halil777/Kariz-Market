
* **Mobile app → React Native**
* **No Docker (but with CI/CD without containers)**
* **Multi-vendor marketplace**
* **Recommendation system (AI/ML)**
* **Loyalty program / bonus system**
* **Offline mode for mobile app**
* **Infrastructure moved to the very end (last section)**
* **UI library → MUI**

I’ll prepare it in **English** for clarity and future collaboration.

---

# Technical Specification (Teh. Zadanie) – Käriz Market E-commerce Platform

## 1. Project Overview

Käriz Market is a large-scale retail chain aiming to establish a robust **e-commerce platform** to complement its existing physical stores. The project requires building a modern **web application, mobile apps (iOS & Android), and an admin panel** with high performance, scalability, and reliability.

The system must support **multi-vendor functionality**, loyalty programs, AI-driven recommendations, and offline usage in the mobile app.

---

## 2. Technology Stack

### Frontend (Web)

* **Framework**: Vite + React + TypeScript
* **UI Library**: MUI (Material UI)
* **State Management**: Redux Toolkit
* **Data Fetching**: React Query
* **Routing**: React Router DOM
* **Optimizations**: Code Splitting, Lazy Loading, SEO-friendly setup

### Mobile Apps (iOS & Android)

* **Framework**: React Native
* **State Management**: Redux Toolkit
* **Data Sync**: React Query + AsyncStorage (offline mode)
* **Push Notifications**: Firebase Cloud Messaging (FCM)
* **Offline Mode**: Caching data locally for browsing and cart functionality

### Backend

* **Framework**: NestJS (Node.js)
* **Database**: PostgreSQL with TypeORM
* **Authentication**: JWT + Refresh Tokens
* **Cache**: Redis (sessions, catalog caching, rate limiting)
* **API**: REST (with future readiness for GraphQL if needed)
* **Payment Integration**: Stripe, PayPal, and local gateways
* **AI/ML Integration**: Recommendation system (collaborative filtering, personalization engine)

---

## 3. User Roles

1. **Guest User** – can browse products, search, and view categories.
2. **Customer** – can register, log in, place orders, use loyalty points.
3. **Vendor** – can manage their own inventory, orders, and reports.
4. **Admin** – manages global platform, vendors, categories, customers, and campaigns.
5. **Super Admin** – full system control, manages admins and platform-level settings.

---

## 4. Core Modules & Features

### A. Customer-Facing Web & Mobile

* **Home Page** – banners, featured products, categories.
* **Product Catalog** – filtering, sorting, multi-level categories.
* **Product Detail Page** – images, price, stock status, vendor info.
* **Shopping Cart & Wishlist**.
* **Checkout & Payment** – integration with multiple gateways.
* **Order Tracking** – real-time status updates.
* **Loyalty Program** – points collection, redemption, special offers.
* **Recommendation System** – personalized suggestions using AI/ML.
* **Multi-language support** (Turkmen, Russian, English).
* **Offline Mode (mobile)** – browsing cached catalog, managing cart offline, sync on reconnect.

### B. Vendor Portal

* **Product Management** – add/edit/delete products, upload images.
* **Order Management** – view/manage vendor-specific orders.
* **Inventory Management** – stock control.
* **Sales Reports** – revenue, best-selling products, order analytics.

### C. Admin Panel (Web-Based)

* **Dashboard** – real-time stats on sales, orders, vendors, customers.
* **Vendor Management** – onboarding, commission setup, monitoring.
* **Product & Category Management** – CRUD operations.
* **Customer Management** – user details, loyalty tracking.
* **Order Management** – view, update, resolve disputes.
* **Coupon & Discount Management** – campaigns, promo codes.
* **Reports & Exports** – sales, performance, Excel/PDF export.

---

## 5. Security & Compliance

* Role-based access control (RBAC).
* Data encryption (HTTPS, TLS, password hashing with bcrypt).
* OWASP compliance (protection against SQL Injection, XSS, CSRF).
* GDPR-ready for handling customer data.

---

## 6. Performance & Optimization

* **Database**: Proper indexing, optimized queries.
* **Backend**: Redis caching for catalog & sessions.
* **Frontend**: Code splitting, lazy loading, optimized image delivery.
* **Scalability**: Horizontal scaling support.
* **Error Handling**: Centralized error logging & fallback strategies.

---

## 7. Future Extensions

* Multi-warehouse logistics integration.
* AI-powered customer support chatbot.
* Marketplace expansion with third-party logistics (3PL).
* Advanced analytics dashboards.

---

## 8. Infrastructure & Deployment (Final Phase)

* **Cloud Hosting**: AWS or GCP.
* **CI/CD**: GitHub Actions or GitLab CI (without Docker, using direct deployment pipelines).
* **CDN**: Cloudflare or AWS CloudFront for static asset delivery.
* **Monitoring & Logging**:

  * Prometheus & Grafana – system metrics.
  * Sentry – error tracking.
  * Cloud logging & alerts.


1. Backend foundation
2. Customer frontend
3. Vendor module
4. Admin panel
5. Mobile offline & loyalty
6. AI recommendations


